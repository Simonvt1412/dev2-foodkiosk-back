<%# This is an EJS template file - ignore JavaScript syntax errors in VS Code %>

<!-- Stats Cards -->
<div class="row mb-4">
  <div class="col-xl-3 col-md-6 mb-3">
    <div class="stats-card">
      <h4>Bestellingen Vandaag</h4>
      <div class="number"><%= ordersToday %></div>
    </div>
  </div>
  
  <div class="col-xl-3 col-md-6 mb-3">
    <div class="stats-card">
      <h4>Bestellingen Deze Maand</h4>
      <div class="number"><%= ordersThisMonth %></div>
    </div>
  </div>
  
  <div class="col-xl-3 col-md-6 mb-3">
    <div class="stats-card">
      <h4>Omzet Vandaag</h4>
      <div class="number">€<%= todayRevenue %></div>
    </div>
  </div>
  
  <div class="col-xl-3 col-md-6 mb-3">
    <div class="stats-card">
      <h4>Omzet Deze Maand</h4>
      <div class="number">€<%= monthlyRevenue %></div>
    </div>
  </div>
</div>

<!-- Charts Row -->
<div class="row g-3 mb-4">
  <!-- Monthly Chart -->
  <div class="col-xl-6">
    <div class="card shadow-sm rounded h-100">
      <div class="card-header bg-white py-3">
        <h6 class="card-title mb-0">Bestellingen & Omzet per Maand</h6>
      </div>
      <div class="card-body p-3">
        <div class="chart-container" style="position: relative; height: 300px;">
          <canvas id="monthlyChart"></canvas>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Status Chart -->
  <div class="col-xl-6">
    <div class="card shadow-sm rounded h-100">
      <div class="card-header bg-white py-3">
        <h6 class="card-title mb-0">Status Verdeling</h6>
      </div>
      <div class="card-body p-3">
        <div class="chart-container" style="position: relative; height: 300px;">
          <canvas id="statusChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Recent Orders Row -->
<div class="row mb-4">
  <div class="col-12">
    <div class="card shadow-sm rounded">
      <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
        <h6 class="card-title mb-0">Recente Bestellingen</h6>
        <a href="/orders" class="btn btn-sm btn-outline-primary">Alle Bestellingen</a>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>Bestelnr.</th>
                <th>Datum</th>
                <th>Klant</th>
                <th>Totaal</th>
                <th>Status</th>
                <th>Acties</th>
              </tr>
            </thead>
            <tbody>
              <% if (recentOrders && recentOrders.length > 0) { %>
                <% recentOrders.forEach(function(order) { %>
                  <tr>
                    <td>#<%= order.id %></td>
                    <td><%= order.order_date %></td>
                    <td><%= order.customer_name || 'Onbekend' %></td>
                    <td>€<%= typeof order.total === 'number' ? order.total.toFixed(2) : order.total %></td>
                    <td>
                      <% 
                      let badgeClass = '';
                      switch(order.status) {
                        case 'completed': badgeClass = 'bg-success'; status = 'Afgerond'; break;
                        case 'in_progress': badgeClass = 'bg-info'; status = 'In behandeling'; break;
                        case 'pending': badgeClass = 'bg-warning text-dark'; status = 'In afwachting'; break;
                        case 'cancelled': badgeClass = 'bg-danger'; status = 'Geannuleerd'; break;
                        default: badgeClass = 'bg-secondary'; status = order.status;
                      }
                      %>
                      <span class="badge <%= badgeClass %>"><%= status %></span>
                    </td>
                    <td>
                      <a href="/orders/<%= order.id %>" class="btn btn-sm btn-outline-primary">Details</a>
                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="6" class="text-center">Geen recente bestellingen</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Popular Products Row -->
<div class="row">
  <div class="col-12">
    <div class="card shadow-sm rounded">
      <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
        <h6 class="card-title mb-0">Populaire Pasta Combinaties</h6>
        <span class="badge bg-primary rounded-pill">Top 5</span>
      </div>
      <div class="card-body">
        <% if (popularProducts && popularProducts.length > 0) { %>
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>Combinatie</th>
                  <th>Details</th>
                  <th>Aantal Verkocht</th>
                  <th>Omzet</th>
                </tr>
              </thead>
              <tbody>
                <% popularProducts.forEach(function(product) { %>
                  <tr>
                    <td><strong><%= product.name %></strong></td>
                    <td><%= product.details || 'Standaard' %></td>
                    <td><%= product.quantity %></td>
                    <td>€<%= product.revenue %></td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
        <% } else { %>
          <p class="text-center text-muted py-3">Geen populaire producten gevonden</p>
        <% } %>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Load Chart.js if not already loaded
  if (typeof Chart === 'undefined') {
    console.log('Loading Chart.js dynamically');
    var script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';
    script.onload = initCharts;
    document.head.appendChild(script);
  } else {
    console.log('Chart.js already loaded');
    initCharts();
  }

  function initCharts() {
    console.log('Initializing charts');
    try {
      // Initialize monthly data chart
      const monthlyCtx = document.getElementById('monthlyChart');
      if (monthlyCtx) {
        console.log('Monthly chart context found');
        
        // Parse monthly data with error handling
        let monthlyData = [];
        try {
          // Replace HTML entity for quotes and parse
          const rawData = '<%= monthlyData %>'.replace(/&quot;/g, '"');
          console.log('Raw monthly data:', rawData);
          monthlyData = JSON.parse(rawData);
          console.log('Parsed monthly data:', monthlyData);
        } catch (e) {
          console.error('Error parsing monthly data:', e);
          monthlyData = [
            { month: 'jan 2025', orders: 12, revenue: 480 },
            { month: 'feb 2025', orders: 15, revenue: 620 },
            { month: 'mrt 2025', orders: 18, revenue: 720 },
            { month: 'apr 2025', orders: 22, revenue: 880 },
            { month: 'mei 2025', orders: 25, revenue: 1000 },
            { month: 'jun 2025', orders: 5, revenue: 217 }
          ];
        }
        
        // Only keep the last 6 months to avoid overcrowding
        monthlyData = monthlyData.slice(-6);
        
        new Chart(monthlyCtx, {
          type: 'bar',
          data: {
            labels: monthlyData.map(item => item.month),
            datasets: [
              {
                label: 'Bestellingen',
                data: monthlyData.map(item => Number(item.orders) || 0),
                backgroundColor: 'rgba(91, 140, 81, 0.7)',
                borderWidth: 0,
                borderRadius: 4
              },
              {
                label: 'Omzet (€)',
                data: monthlyData.map(item => Number(item.revenue) || 0),
                type: 'line',
                borderColor: '#f1935c',
                backgroundColor: 'rgba(241, 147, 92, 0.1)',
                borderWidth: 2,
                fill: true,
                tension: 0.3,
                yAxisID: 'y1'
              }
            ]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                position: 'top',
                align: 'end',
                labels: {
                  usePointStyle: true,
                  boxWidth: 10
                }
              },
              tooltip: {
                callbacks: {
                  label: function(context) {
                    let label = context.dataset.label || '';
                    if (label) {
                      label += ': ';
                    }
                    if (context.parsed.y !== null) {
                      if (context.dataset.label.includes('Omzet')) {
                        label += '€' + context.parsed.y;
                      } else {
                        label += context.parsed.y;
                      }
                    }
                    return label;
                  }
                }
              }
            },
            scales: {
              y: {
                beginAtZero: true,
                title: {
                  display: true,
                  text: 'Bestellingen'
                },
                ticks: {
                  font: {
                    size: 11
                  }
                }
              },
              y1: {
                position: 'right',
                beginAtZero: true,
                grid: {
                  display: false
                },
                title: {
                  display: true,
                  text: 'Omzet (€)'
                },
                ticks: {
                  callback: function(value) {
                    return '€' + value;
                  },
                  font: {
                    size: 11
                  }
                }
              }
            }
          }
        });
      } else {
        console.error('Monthly chart canvas element not found');
      }

      // Initialize status chart
      const statusCtx = document.getElementById('statusChart');
      if (statusCtx) {
        console.log('Status chart context found');
        
        // Get status distribution data
        const statusDistribution = {
          pending: <%= typeof statusDistribution !== 'undefined' && statusDistribution.pending ? statusDistribution.pending : 0 %>,
          in_progress: <%= typeof statusDistribution !== 'undefined' && statusDistribution.in_progress ? statusDistribution.in_progress : 0 %>,
          completed: <%= typeof statusDistribution !== 'undefined' && statusDistribution.completed ? statusDistribution.completed : 0 %>,
          cancelled: <%= typeof statusDistribution !== 'undefined' && statusDistribution.cancelled ? statusDistribution.cancelled : 0 %>
        };
        console.log('Status distribution data:', statusDistribution);
        
        new Chart(statusCtx, {
          type: 'doughnut',
          data: {
            labels: ['In afwachting', 'In behandeling', 'Afgerond', 'Geannuleerd'],
            datasets: [{
              data: [
                statusDistribution.pending,
                statusDistribution.in_progress,
                statusDistribution.completed,
                statusDistribution.cancelled
              ],
              backgroundColor: [
                '#ffc107',  // warning - pending
                '#17a2b8',  // info - in progress
                '#5b8c51',  // success - completed
                '#dc3545'   // danger - cancelled
              ],
              borderWidth: 2,
              borderColor: '#fff'
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            cutout: '60%',
            plugins: {
              legend: {
                position: 'right',
                labels: {
                  usePointStyle: true,
                  boxWidth: 10,
                  font: {
                    size: 11
                  }
                }
              }
            }
          }
        });
      } else {
        console.error('Status chart canvas element not found');
      }
    } catch (err) {
      console.error('Error initializing charts:', err);
    }
  }
});
</script>